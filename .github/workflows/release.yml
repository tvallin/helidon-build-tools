#
# Copyright (c) 2023, 2024 Oracle and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Release"

on:
  push:
    branches:
      - 'release-*'

env:
  JAVA_VERSION: 17
  JAVA_DISTRO: oracle
  MAVEN_ARGS: |
    -B -e
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=60
    -Dmaven.wagon.http.retryHandler.count=3
    -Djdk.toolchain.version=${JAVA_VERSION}
    -Dcache.enabled=true

concurrency:
  group: release-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-tag:
    runs-on: ubuntu-20.04
    environment: release
    outputs:
      tag: ${{ steps.create-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.SERVICE_ACCOUNT_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v4.1.0
        with:
          distribution: ${{ env.JAVA_DISTRO }}
          java-version: ${{ env.JAVA_VERSION }}
      - id: create-tag
        run: ./etc/scripts/release.sh create_tag >> "${GITHUB_OUTPUT}"
  validate:
    needs: create-tag
    uses: ./.github/workflows/validate.yml
    with:
      ref: ${{ needs.create-tag.outputs.tag }}
  release:
    needs: [ create-tag, validate ]
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    environment: release
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-tag.outputs.tag }}
      - uses: ./.github/actions/common
        with:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          MAVEN_SETTINGS: ${{ secrets.MAVEN_SETTINGS }}
          build-cache: read-only
          artifact-name: io-helidon-build-tools-artifacts-${{ github.ref_name }}
          artifact-path: target/nexus-staging/
          run: etc/scripts/release.sh release_build
  homebrew:
    name: Update Homebrew Formula
    runs-on: ubuntu-20.04
    # Skip this job if the release tag does not contain cli
    if: ${{ contains(needs.create-tag.outputs.tag, 'cli/') }}
    steps:
      - uses: mislav/bump-homebrew-formula-action@v3
        with:
          # By default, this will edit the `helidon.rb` formula in
          # homebrew-core to update its "url" field to:
          # `https://github.com/OWNER/REPO/archive/refs/tags/<tag-name>.tar.gz`
          # The "sha256" formula field will get automatically recomputed.
          formula-name: helidon
          tag-name: ${{ needs.create-tag.outputs.tag }}
        env:
          # the personal access token should have "repo" & "workflow" scopes
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
  sdkman:
    name: Update SDKMan binaries
    runs-on: ubuntu-20.04
    # Skip this job if the release tag does not contain cli
    if: ${{ contains(needs.create-tag.outputs.tag, 'cli/') }}
    steps:
      - id: update-sdkman-cli-binaries
        env:
          SDKMAN_CONSUMER_KEY: ${{ secrets.SDKMAN_CONSUMER_KEY }}
          SDKMAN_CONSUMER_TOKEN: ${{ secrets.SDKMAN_CONSUMER_TOKEN }}
        run: |
          curl -X POST \
               -H "Consumer-Key: ${{ env.SDKMAN_CONSUMER_KEY }}" \
               -H "Consumer-Token: ${{ env.SDKMAN_CONSUMER_TOKEN }}" \
               -H "Content-Type: application/json" \
               -H "Accept: application/json" \
               -d '{"candidate": "helidon", "version": "${{ needs.create-tag.outputs.tag }}", "url": "https://github.com/helidon-io/helidon-build-tools/releases/download/${{ needs.create-tag.outputs.tag }}/helidon-cli.zip"}' \
               https://vendors.sdkman.io/release
